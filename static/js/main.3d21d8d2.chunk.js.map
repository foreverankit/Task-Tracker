{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","style","backgroundColor","className","defaultProps","Header","title","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","onClick","day","Tasks","tasks","map","AddTask","onAdd","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","setTasks","console","log","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d21d8d2.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({color, text}) => {\n    return <button style={{backgroundColor: color}} className='btn'>{text}</button>  \n}\n\nButton.defaultProps = {\n    color: 'steelblue',\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string\n}\n\nexport default Button\n","import Button from './Button'\n\nconst Header = ({title}) => {\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            <Button color='green' text='Add'/>\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Task Tracker',\n}\n\n//css in js\n// const headingStyles = {\n//     color: 'red', \n//     backgroundColor: 'black'\n// }\n\nexport default Header\n","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => {onToggle(task.id)}}>\n            <h3>\n                {task.text} <FaTimes style={{color: \n                    'red', cursor: 'pointer'}} onClick=\n                    {() => onDelete(task.id)}/>\n            </h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\nconst Tasks = ({ tasks, onDelete, onToggle}) => {\n    return (\n        \n        <>\n          {tasks.map((task) => (\n            <Task key={task.id} task={task}\n            onDelete={onDelete} onToggle={onToggle}/>\n          ))}  \n        </>\n    )\n}\n\nexport default Tasks\n\n","import { useState } from 'react'\n\nconst AddTask = ({ onAdd }) => {\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if(!text){\n            alert(\"Please add a task\")\n            return\n        }\n\n        onAdd({ text, day, reminder})\n\n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n\n    return (\n    <form className='add-form' onSubmit={onSubmit}>\n        <div className='form-control'>\n            <label>Task</label>\n            <input type='text' placeholder='Add Task' value={text} onChange={(e) => \n                setText(e.target.value)}/>\n        </div>\n\n        <div className='form-control'>\n            <label>Day & Time</label>\n            <input type='text' placeholder='Add Day & Timne' value={day} onChange={(e) => \n                setDay(e.target.value)}/>\n        </div>\n\n        <div className='form-control form-control-check'>\n            <label>Set Reminder</label>\n            <input type='checkbox' checked={reminder} value={reminder} onChange={(e) => \n                setReminder(e.currentTarget.checked)}/>\n        </div>\n\n        <input type='submit' value='Save Task' className='btn btn-block'/>\n    </form>      \n    \n    )\n}\n\nexport default AddTask\n","import { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n  const [tasks, setTasks] = useState( [\n    {\n        id: 1,\n        text: 'Doctors Appointment',\n        day: 'Feb 5th at 2:30pm',\n        reminder: true,\n    },\n    {\n        id: 2,\n        text: 'Meeting at school',\n        day: 'Feb 6th at 2:30pm',\n        reminder: true,\n    },\n    {\n        id: 3,\n        text: 'Food Shopping',\n        day: 'Feb 7th at 2:30pm',\n        reminder: false,\n    },\n  ])\n\n\n  // Add Task\n  const addTask = (task) => {\n    console.log(task)\n  }\n  \n  //Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => task.id === id\n    ? { ...task, reminder: !task.reminder} : task))\n  }\n\n  // Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  return (\n    <div className=\"container\">\n      <Header/>\n      <AddTask onAdd={addTask}/>\n      {tasks.length > 0 ? (<Tasks tasks={tasks} onDelete\n      ={deleteTask} onToggle={toggleReminder}/>\n      ) : (\n        \"No Tasks to Show\"\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}